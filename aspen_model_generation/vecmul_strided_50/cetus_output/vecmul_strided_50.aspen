model vecmul_strided_50 {
param aspen_param_default = 1
param aspen_param_sizeof_float = 4
param N = 100000000
data a [(4*N)] 
data b [(4*N)] 
data c [(4*N)] 
kernel vectorMultiplication_openacc {
execute  "block_vectorMultiplication_openacc7__intracommIN" {
intracomm [(aspen_param_sizeof_float*N)] to c as copyin
intracomm [(aspen_param_sizeof_float*N)] to a as copyin
flops [1] as integer
loads [((1*aspen_param_sizeof_float)*(floor(((-50+N)/50))+1))] from b as stride(50), pattern(stride)
loads [((1*aspen_param_sizeof_float)*(floor(((-50+N)/50))+1))] from a as stride(50), pattern(stride)
stores [((1*aspen_param_sizeof_float)*(floor(((-50+N)/50))+1))] from c as stride(50), initialized(0), pattern(stride)
flops [(1*(floor(((-50+N)/50))+1))] as sp, simd
}
}
kernel main {
call vectorMultiplication_openacc()
}
}
