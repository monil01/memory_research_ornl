model vecmul {
param aspen_param_default = 1
param aspen_param_sizeof_float = 4
param N = 512
data a [(4*N)] 
data b [(4*N)] 
data c [(4*N)] 
kernel vectorMultiplication_openacc {
execute  "block_vectorMultiplication_openacc9__intracommIN" {
intracomm [(aspen_param_sizeof_float*N)] to b as copyin
intracomm [(aspen_param_sizeof_float*N)] to a as copyin
flops [1] as integer
loads [((1*aspen_param_sizeof_float)*(floor(((-100+N)/100))+1))] from a as stride(1)
loads [((1*aspen_param_sizeof_float)*(floor(((-100+N)/100))+1))] from b as stride(1)
stores [((1*aspen_param_sizeof_float)*(floor(((-100+N)/100))+1))] to c as stride(1)
flops [(1*(floor(((-100+N)/100))+1))] as sp, simd
intracomm [(aspen_param_sizeof_float*N)] to c as copyout
}
}
kernel main {
call vectorMultiplication_openacc()
}
}
